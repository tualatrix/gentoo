diff --git a/vmware-player.py b/vmware-player.py
index bee22df..d06cca9 100644
--- a/vmware-player.py
+++ b/vmware-player.py
@@ -6,7 +6,8 @@ VMware Player component installer.
 
 GCONF_DEFAULTS = 'xml:readwrite:/etc/gconf/gconf.xml.defaults'
 DEST = LIBDIR/'vmware'
-CONFIG = DEST/'setup/vmware-config'
+import os
+CONFIG = path(os.environ['WORKDIR'])/'vmware-config.sh'
 CUPSLIBDIR = LIBDIR/'cups'
 # XXX: LIBDIR should be properly calculated, to make this cleaner
 if (PREFIX/'lib64/cups').exists():
@@ -84,12 +85,12 @@ class Player(Installer):
       ret, kvers = output('uname', '-r')
       kvers = kvers.strip()
       modules = ('vmmon', 'vmnet', 'vmblock', 'vmci', 'vsock')
-      base = path('/lib/modules/%s/misc' % kvers)
+      base = path('/this/path/doesnt/exist/lib/modules/%s/misc' % kvers)
 
       for module in modules:
          for ext in ('o', 'ko'):
             mod = '%s.%s' % (module, ext)
-            (base/mod).remove(ignore_errors=True)
+            # (base/mod).remove(ignore_errors=True)
 
    def PreUninstall(self, old, new, upgrade):
       script = INITSCRIPTDIR/'vmware'
@@ -156,8 +157,8 @@ class Player(Installer):
    def PostTransactionInstall(self, old, new, upgrade):
       if ENV.get('VMWARE_SKIP_MODULES'):
          log.info('Skipping kernel module installation')
-      elif run(BINDIR/'vmware-modconfig', '--console', '--install-all') == 0:
-         log.info('Successfully installed kernel modules')
+      # elif run(BINDIR/'vmware-modconfig', '--console', '--install-all') == 0:
+      #    log.info('Successfully installed kernel modules')
       else:
          log.info('Unable to install kernel modules')
 
@@ -189,8 +190,8 @@ class Player(Installer):
          for handler in ('vm', 'vms'):
             for gconfType, key, value in settings:
                key = key % handler
-               run('gconftool-2', '--direct', '--config-source', GCONF_DEFAULTS,
-                   '--type', gconfType, '--set', key, value)
+               # run('gconftool-2', '--direct', '--config-source', GCONF_DEFAULTS,
+               #     '--type', gconfType, '--set', key, value)
 
          # Instruct all gconfd daemons to reload.
          run('killall', '-HUP', 'gconfd-2')
@@ -200,9 +201,9 @@ class Player(Installer):
    def _deconfigureVMStreamingHandlers(self):
       """ Deconfigures the handlers for vm:// and vms:// used for VM streaming"""
       def deconfigureGConf():
-         for handler in ('vm', 'vms'):
-            run('gconftool-2', '--direct', '--config-source', GCONF_DEFAULTS,
-                '--recursive-unset', '/desktop/gnome/url-handlers/%s' % handler)
+         # for handler in ('vm', 'vms'):
+         #    run('gconftool-2', '--direct', '--config-source', GCONF_DEFAULTS,
+         #       '--recursive-unset', '/desktop/gnome/url-handlers/%s' % handler)
 
          # Instruct all gconfd daemons to reload.
          run('killall', '-HUP', 'gconfd-2')
